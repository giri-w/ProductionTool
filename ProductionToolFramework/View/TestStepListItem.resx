<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="ResultPicture.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        vQAADr0BR/uQrQAAABh0RVh0U29mdHdhcmUAcGFpbnQubmV0IDQuMC45bDN+TgAAArdJREFUSEulVU1r
        FEEQfW3ED/ATEUXEJNs9u5tVRI3elOjNj5OIoh7EozdjxIsG/AOKIHiPIC7oQUVxFRHFQ0JCQLxI9BQD
        RuIpLEiSyc60rzu9k5nJrrpjwWNmqqvem66u7sbfLMxhVyDFz1CJ72EB25z7/00DbdrDRRI/DaUY5vOr
        VmIglDjDMeHC/t3mJY5aMoeah2sk1I0QKvTGYh/qPIqOprkxcCxOEijcYmk+0z8eB30fAw/34rH0VxxN
        c2PQRCJJCj9Q4i39r1L4QITxWC3Fe0fT3JiUEGgJrQiwvufZOSctFE5F740g0ZdFYF3YhXZ20B76hsM8
        Okl0JA2O5xi7t2UBncN61n6Q35O6iG6uxWPrT4H+B5kE7AwUVs661tM9WB5ux+o0rD+zQCe28FniTCpV
        hc2hh64lKGJTJgFXolFiwvdwiP4n1p8C/eXsMyhgrS/RbY8LCtqFTkHvwMbMAjMSiiQHAk8M2a5RuBJB
        4oJLYU72Er3j9w+K7Ga33OH7WAwj9cNOt2PDvIfjczxxLcmfjInRDHQJK2wZSljjhpeYLqCD8Y94NlVN
        Hn/qGxf/uj6NNheStLiAX8B+LXHYLPYcy8DEcwa1HM6acdPCJB4iEnuE3yPMKTcUqQu4Er0kJtmKefoG
        iOkIFGas2YhlUyqSPjd5jL99E1jG7xc1hUuOdtESJWIgy7PVDSWMZ5Bn4gxq5vLhOvDZZ8Q4y/4FDjHo
        whctEvBwIn7mxMGL5SAFjtUF+Le/KNBh8tnWN+p+co1b0rjRmbhwmsFX6Km/z+bE/YVc7nbe1+T44sZG
        LWncfPN33LVEdG02wpzEPtb7U02JZ6aUXPh++qc4w50zPGFJPs0qXHW02cx0GcvzmoiuTopOUewynxXT
        5i40u9lNqMQbIjAC3JBVvt/lmqxyITTgNy+kaXqAQ2sNAAAAAElFTkSuQmCC
</value>
  </data>
  <data name="ResultPicture.InitialImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        TkSuQmCC
</value>
  </data>
</root>