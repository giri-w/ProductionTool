using System;
using System.Collections.Generic;
using Demcon.ProductionTool.Hardware;
using System.Threading.Tasks;
using System.Windows.Forms;
using HemicsFat;
using System.IO;
using System.Xml.Linq;
using System.Linq;
using System.Xml;

namespace Demcon.ProductionTool.Model.Tests.LUTDetermination
{
    public class LUTTestStep0022 : TestStep
    {


        /// <summary>
        /// Initializes a new instance of the <see cref="LUTTestStep0022"/> class.
        /// DO NOT USE! Only for Serializabililty!
        /// </summary>
        [Obsolete]
        public LUTTestStep0022()
            : this(null)
        { }

        
        private string testResult = string.Empty;
        private string testSetting = @"Setting\config.xml";

        public LUTTestStep0022(TestManager testManager)
            : base(testManager)
        {
            this.Name = "GRID Location";
            this.Instructions = " Locate GRID folder location in the computer \n"+
                                " Press Browse to set Grid  Measurement Location\n" +
                                "\nWhen finished, press Next";
            this.SupportingImage = string.Empty;
            this.ButtonOptions = EButtonOptions.Next | EButtonOptions.Back | EButtonOptions.Browse;
            this.Results = new List<Result>();
            this.OnTestUpdated(false);
            this.OnTestCanceled(false);
        }

     

        public override void Execute(EButtonOptions userAction, string info)
        {
            this.Stop();

            this.Results.Clear();
            if (userAction == EButtonOptions.Next)
            {
                // Check or do something (with the hardware?) for the test
                this.Results.Add(new BooleanResult("GRID Location", testResult,true));
                this.OnTestUpdated(true);
            }

            if (userAction == EButtonOptions.Browse)
            {
                ChangeXml chg = new ChangeXml();
                // save folder location 
                testResult = info;


                if (File.Exists(testSetting)) // check if config.xml exist
                {

                    var xml = XDocument.Load(testSetting);
                    bool isLUTConfigExist = xml.Element("Test").Elements("FAT1").Elements("LUT").Any();

                    if (isLUTConfigExist)
                    {
                        chg.modifyElement(testSetting, "Test", "FAT1", "LUT", "GRID", testResult);
                        MessageBox.Show("Setting saved");
                    }
                    else
                        MessageBox.Show("Ada yang salah dengan XML");


                }
                else
                {
                    // create new config file
                    XmlTextWriter writer = new XmlTextWriter(testSetting, System.Text.Encoding.UTF8);
                    chg.createNewConfig(writer);
                    var xml = XDocument.Load(testSetting);
                    chg.modifyElement(testSetting, "Test", "FAT1", "LUT", "GRID", testResult);
                    MessageBox.Show("XML File created ! ");
                }

            }

            if (userAction == EButtonOptions.Back)
            {
                this.OnTestCanceled(true);
            }




        }
    }
}
