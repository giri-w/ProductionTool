using System;
using System.Linq;
using System.Windows.Forms;
using Demcon.ProductionTool.General;
using Demcon.ProductionTool.Hardware;
using Demcon.ProductionTool.Model;
using Demcon.ProductionTool.View.FatTestPages;

namespace Demcon.ProductionTool.View
{
    public partial class MainForm : Form
    {
        private TestPage testPage;

        public MainForm()
        {
            try
            {
                this.HwManager = new HwManager();
                string versionString = "HandScanner Tool; " + GetSvnRevision();
                this.TestManager = new TestManager(versionString);
                InitializeComponent();
                this.Text = versionString;
                this.tabFatTests1.TestManager = this.TestManager;
                this.testPage1.TestManager = this.TestManager;
            }
            catch (Exception ex)
            {
                string message = string.Empty;
                Exception e = ex;
                while (e != null)
                {
                    message += e.Message + "\n";
                    e = e.InnerException;
                }

                MessageBox.Show(message);
            }
        }

        public HwManager HwManager
        {
            get;
            private set;
        }

        public TestManager TestManager
        {
            get;
            private set;
        }

        private void MainForm_Load(object sender, EventArgs e)
        {
            this.TestManager.TestSequenceRequestedEvent += this.StartTestSequence;
        }

        private string GetSvnRevision()
        {
            string retVal = "Unknown version ";
            string[] svnPathParts = Demcon.ProductionTool.Model.SvnInformation.Path.Split(new char[] { '/', '\\' });
            int svnPathPartsCount = svnPathParts.Length;
            if (svnPathPartsCount > 3)
            {
                if (svnPathParts.Contains("trunk"))
                {
                    retVal = "Trunk version ";
                }
                else
                {
                    if (svnPathParts.Contains("tags"))
                    {
                        retVal = "Release ";
                    }
                    else if (svnPathParts.Contains("branches"))
                    {
                        retVal = "Branch ";
                    }

                    retVal += svnPathParts.Last(); // branch / tag name
                }
            }

            retVal += " R" +  Demcon.ProductionTool.Model.SvnInformation.Revision;
            if (Demcon.ProductionTool.Model.SvnInformation.Modified)
            {
                retVal += "M";
            }

            return retVal;
        }

        private void MainForm_FormClosing(object sender, FormClosingEventArgs e)
        {
            this.TestManager.TestSequenceRequestedEvent -= this.StartTestSequence;
            this.TestManager.Dispose();
            this.HwManager.Dispose();
        }

        private void StartTestSequence(object sender, EventArgs<string> e)
        {
            if (this.TestManager.CurrentSequence == null)
            {
                this.tabFatTests1.BringToFront();
            }
            else
            {
                this.testPage1.BringToFront();
            }
        }
    }
}
